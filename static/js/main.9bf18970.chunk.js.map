{"version":3,"sources":["assets/images/logo.png","logo.svg","components/Layout.js","components/BlankLayout.js","components/home.js","services/Constant.js","services/DataServices.js","store/TableMap.js","components/TableMap.js","components/about.js","store/Login.js","components/Login.js","App.js","index.js","store/configureStore.js"],"names":["module","exports","__webpack_require__","p","Header","Menu","SubMenu","Layout","Content","Sider","Footer","MainLayout","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkAuth","posUser","sessionStorage","getItem","length","window","location","replace","toggle","setState","collapsed","state","react_default","a","createElement","layout","trigger","collapsible","className","menu","theme","mode","defaultSelectedKeys","Item","key","react_router_dom","to","icon","type","style","background","padding","onClick","margin","minHeight","children","React","Component","data","title","BASE_URL","get","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","url","wrap","_context2","prev","next","axios","constant","then","res","catch","error","response","abrupt","sent","stop","_x2","apply","arguments","initialState","isLoading","tableTypes","tableAreas","RVCQuickInfomation","actionCreators","requestTableTypes","_ref","_callee","dispatch","ttsRes","_context","dataServices","status","t0","_x","requestTableAreas","tasRes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","ta","tmTemp","tmsRes","undefined","Symbol","iterator","done","value","concat","tableArea1","return","finish","console","log","t1","requestRVCQuickInfomation","_ref3","_callee3","_context3","_x3","requestPOSInfo","_callee4","_context4","reducer","action","objectSpread","TableMap","checkPOSInfo","POSInfo","posDate","today","Date","Modal","warning","content","item","find","i","tableType1","tableType","imageNull","imagePickup","_this2","_this$props","displayed","row","gutter","map","col","lg","xl","card","statistic","dataReturn","tableAreaName","list","grid","xs","sm","md","xxl","dataSource","tableMaps","renderItem","index","checkNo","includes","tableCode","push","width","src","getImagePickup","alt","tGuest","tChild","tSubtable","amount","openTime","lastChgTime","getImageNull","connect","tableMap","bindActionCreators","About","handleModelChange","model","config","imagePaste","imageUpload","imageUploadParam","imageUploadURL","imageUploadParams","id","toString","imageUploadMethod","imageMaxSize","imageAllowedTypes","placeholderText","pluginsEnabled","toolbarButtons","events","image.beforeUpload","images","image.uploaded","image.inserted","$img","react_froala_wysiwyg_default","onModelChange","defRVCList","notis","requestDefRVCList","getTotalNotis","getNoti","requestNotis","_ref4","login","_callee5","_context5","rvcNo","password","Login","Select","Option","openNotification","message","description","args","duration","placement","notification","open","handleSubmit","e","preventDefault","form","validateFields","err","values","resuilt","success","setItem","checkNotis","totalNotis","noti","_message","totalMessage","idAlert","information","getFieldDecorator","justify","dropdown","overlay","es_button","size","shape","height","logo","es_form","onSubmit","rules","required","es_radio","Group","Button","rvcno","rvcname","input","prefix","color","placeholder","htmlType","LoginForm","Form","create","currentUrl","pathname","split","App","BlankLayout","react_router","exact","path","component","store","history","reducers","middleware","thunk","routerMiddleware","enhancers","rootReducer","combineReducers","routing","routerReducer","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9bf18970.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3684fb1a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Icon, Avatar } from \"antd\";\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass MainLayout extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.checkAuth();\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  checkAuth = () => {\r\n    const posUser = sessionStorage.getItem(\"posUser\");\r\n    if (!posUser || posUser.length < 1) {\r\n      window.location.replace(\"/POS-API/login\");\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { collapsed } = this.state;\r\n    const posUser = sessionStorage.getItem(\"posUser\");\r\n    return (\r\n      <div>\r\n        {posUser && (\r\n          <Layout>\r\n            <Sider trigger={null} collapsible collapsed={collapsed}>\r\n              <div className=\"logo\" />\r\n              <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n                <Menu.Item key=\"1\">\r\n                  <Link to=\"/POS-API\">\r\n                    <Icon type=\"appstore\" />\r\n                    <span>Table Map</span>\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                  <Link to=\"/test\">\r\n                    <Icon type=\"code\" />\r\n                    <span>Test</span>\r\n                  </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                  <Icon type=\"upload\" />\r\n                  <span>nav 3</span>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n            <Layout>\r\n              <Header style={{ background: \"#fff\", padding: 0 }}>\r\n                <Icon\r\n                  className=\"trigger\"\r\n                  type={collapsed ? \"menu-unfold\" : \"menu-fold\"}\r\n                  onClick={this.toggle}\r\n                />\r\n              </Header>\r\n              <Content\r\n                style={{\r\n                  margin: \"24px 16px\",\r\n                  padding: 24,\r\n                  background: \"#fff\",\r\n                  minHeight: 280\r\n                }}\r\n              >\r\n                {this.props.children}\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout, Menu, Icon, Avatar } from \"antd\";\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nclass MainLayout extends React.Component {\r\n  state = {\r\n    collapsed: false\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nexport default MainLayout;\r\n","import React, { Component } from \"react\";\r\nimport { List } from \"antd\";\r\n\r\nconst data = [\r\n  {\r\n    title: \"Title 1\"\r\n  },\r\n  {\r\n    title: \"Title 2\"\r\n  },\r\n  {\r\n    title: \"Title 3\"\r\n  },\r\n  {\r\n    title: \"Title 4\"\r\n  },\r\n  {\r\n    title: \"Title 5\"\r\n  },\r\n  {\r\n    title: \"Title 6\"\r\n  }\r\n];\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Room</h2>\r\n        <div>\r\n          <h3>Terrace</h3>\r\n          <List\r\n            grid={{\r\n              gutter: 16,\r\n              xs: 1,\r\n              sm: 2,\r\n              md: 4,\r\n              lg: 4,\r\n              xl: 6,\r\n              xxl: 3\r\n            }}\r\n            dataSource={data}\r\n            renderItem={(item, index) => (\r\n              <List.Item>\r\n                <div className={`square ${item.title === \"Title 4\" && \"pick\"}`}>\r\n                  {index + 1}\r\n                  {/* {item.title} */}\r\n                </div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n          <h3 style={{ marginTop: 20 }}>Family</h3>\r\n          <List\r\n            grid={{\r\n              gutter: 16,\r\n              xs: 1,\r\n              sm: 2,\r\n              md: 4,\r\n              lg: 4,\r\n              xl: 6,\r\n              xxl: 3\r\n            }}\r\n            dataSource={data}\r\n            renderItem={(item, index) => (\r\n              <List.Item>\r\n                <div className={`square ${item.title === \"Title 2\" && \"pick\"}`}>\r\n                  {index + 1}\r\n                  {/* {item.title} */}\r\n                </div>\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","export const BASE_URL = \"http://118.69.68.108:8087/\";\n// export const BASE_URL = \"http://180.148.1.165/\";\n","import * as constant from \"./Constant\";\nimport axios from \"axios\";\nimport * as qwest from \"qwest\";\n\nfunction getHeader() {\n  var header = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n    // Authorization: \"Bearer \" + authService.getLoggedInUser().access_token\n  };\n  return header;\n}\n\nfunction getHeaderWithoutBearer() {\n  var header = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  return header;\n}\n\nexport const login = async data => {\n  return await axios\n    .post(\n      constant.BASE_URL + \"api/LoginPOS/GetUserName?RVCNo=33&Password=1007\",\n      data,\n      {\n        headers: getHeaderWithoutBearer()\n      }\n    )\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n};\n\nexport const get = async url => {\n  return await axios\n    .get(constant.BASE_URL + url)\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n};\n\nexport const post = async (url, data) => {\n  return await axios\n    .post(constant.BASE_URL + url, JSON.stringify(data), {\n      headers: getHeader()\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n};\n\nexport const upload = async (url, file) => {\n  var data = new FormData();\n  data.append(\"file\", file);\n  return axios.post(constant.BASE_URL + url, data).then(res => {\n    return res.data;\n  });\n};\n\n// export const postAndGetJson = async (url, data) => {\n//   return await fetch(constant.BASE_URL + url, {\n//     method: \"POST\",\n//     headers: getHeader(),\n//     body: JSON.stringify(data)\n//   }).then(function(response) {\n//     if (response.status == 401) {\n//       window.location.assign(constant.BASE_URL + \"notallow\");\n//     } else {\n//       return response.data;\n//     }\n//   });\n// };\n\nexport const put = async (url, data) => {\n  return await axios\n    .put(constant.BASE_URL + url, JSON.stringify(data), {\n      headers: getHeader()\n    })\n    .then(res => {\n      return res;\n    })\n    .catch(error => {\n      return error.response;\n    });\n};\n\nexport const remove = async url => {\n  return await axios\n    .delete(constant.BASE_URL + url, { headers: getHeader() })\n    .then(res => {\n      return res.data;\n    })\n    .catch(error => {\n      return error.response;\n    });\n};\n","import * as dataServices from \"../services/DataServices\";\n\nconst requestTableTypesType = \"REQUEST_TABLE_TYPES\";\nconst receiveTableTypesType = \"RECEIVE_TABLE_TYPES\";\n\nconst requestTableAreasType = \"REQUEST_TABLE_AREAS\";\nconst receiveTableAreasType = \"RECEIVE_TABLE_AREAS\";\n\nconst requestRVCQuickInfomationType = \"REQUEST_RVCQIT\";\nconst receiveRVCQuickInfomationType = \"RECEIVE_RVCQIT\";\n\nconst initialState = {\n  isLoading: false,\n  tableTypes: [],\n  tableAreas: [],\n  RVCQuickInfomation: {}\n};\n\nexport const actionCreators = {\n  requestTableTypes: () => async dispatch => {\n    try {\n      dispatch({ type: requestTableTypesType });\n      const ttsRes = await dataServices.get(\"api/GetTableMap/GetTableType\");\n      if (ttsRes.status === 200) {\n        dispatch({ type: receiveTableTypesType, tableTypes: ttsRes.data });\n      }\n    } catch (e) {\n      dispatch({ type: receiveTableTypesType, tableTypes: [] });\n    }\n  },\n  requestTableAreas: () => async dispatch => {\n    try {\n      dispatch({ type: requestTableAreasType });\n      const tasRes = await dataServices.get(\n        \"api/GetTableMap/GetTableAreas?RVCNo=33\"\n      );\n      if (tasRes.status === 200) {\n        for (var ta of tasRes.data) {\n          var tmTemp = [];\n          const tmsRes = await dataServices.get(\n            `api/GetTableMap/GetTableMap?RVCNo=33&TableArea=${ta.tableArea1}`\n          );\n          if (tmsRes.status === 200) {\n            tmTemp = tmsRes.data;\n          }\n          ta[\"tableMaps\"] = tmTemp;\n          // console.log(tms);\n        }\n        console.log(tasRes.data);\n\n        dispatch({ type: receiveTableAreasType, tableAreas: tasRes.data });\n      }\n    } catch (e) {\n      console.log(e);\n      dispatch({ type: receiveTableAreasType, tableAreas: [] });\n    }\n  },\n  requestRVCQuickInfomation: () => async dispatch => {\n    try {\n      dispatch({ type: requestRVCQuickInfomationType });\n      const res = await dataServices.get(\n        \"api/GetTableMap/GetRVCQuickInfomation?RVCNo=33&POSDay=04&POSMonth=06&POSYear=2019\"\n      );\n      if (res.status === 200) {\n        dispatch({\n          type: receiveRVCQuickInfomationType,\n          RVCQuickInfomation: res.data\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      dispatch({ type: receiveRVCQuickInfomationType, RVCQuickInfomation: {} });\n    }\n  },\n  requestPOSInfo: () => async () => {\n    try {\n      const res = await dataServices.get(\n        \"api/GetTableMap/GetPOSInfo?RVCCode=33&POSUser=no\"\n      );\n      if (res.status === 200) {\n        return res.data;\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === requestTableAreasType) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n\n  if (action.type === receiveTableAreasType) {\n    return {\n      ...state,\n      tableAreas: action.tableAreas,\n      isLoading: false\n    };\n  }\n\n  if (action.type === requestTableTypesType) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n\n  if (action.type === receiveTableTypesType) {\n    return {\n      ...state,\n      tableTypes: action.tableTypes,\n      isLoading: false\n    };\n  }\n\n  if (action.type === requestRVCQuickInfomationType) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n\n  if (action.type === receiveRVCQuickInfomationType) {\n    return {\n      ...state,\n      RVCQuickInfomation: action.RVCQuickInfomation,\n      isLoading: false\n    };\n  }\n\n  return state;\n};\n","import React, { Component } from \"react\";\nimport { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { actionCreators } from \"../store/TableMap\";\nimport { List, Row, Col, Card, Statistic, Modal, Button } from \"antd\";\n\nfunction warning() {\n  Modal.warning({\n    title: \"Thông báo!\",\n    content: \"Ngày hiện tại và ngày trên hệ thống không trùng khớp!\"\n  });\n}\n\nclass TableMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.props.requestTableTypes();\n    this.props.requestTableAreas();\n    this.props.requestRVCQuickInfomation();\n    this.checkPOSInfo();\n  }\n\n  checkPOSInfo = async () => {\n    const POSInfo = await this.props.requestPOSInfo();\n    if (POSInfo.length > 0) {\n      const posDate = new Date(POSInfo[0].posDate);\n      const today = new Date();\n      if (posDate !== today) {\n        warning();\n      }\n    }\n  };\n\n  getImageNull(item) {\n    const { tableTypes } = this.props;\n    return tableTypes.find(i => i.tableType1 === item.tableType).imageNull;\n  }\n  getImagePickup(item) {\n    const { tableTypes } = this.props;\n    return tableTypes.find(i => i.tableType1 === item.tableType).imagePickup;\n  }\n\n  render() {\n    const {\n      tableAreas,\n      tableTypes,\n      isLoading,\n      RVCQuickInfomation\n    } = this.props;\n    console.log(tableAreas);\n    var displayed = [];\n    return (\n      <div>\n        <h2>Table Map</h2>\n        {isLoading ? (\n          <h3>Loading...</h3>\n        ) : (\n          <div>\n            {RVCQuickInfomation.length > 0 && (\n              <div className=\"dashboard\">\n                <div>\n                  <Row gutter={16}>\n                    {RVCQuickInfomation.map(item => (\n                      <Col lg={6} xl={4}>\n                        <Card\n                          style={{\n                            background:\n                              \"linear-gradient(to right, #00b4db, #0083b0)\"\n                          }}\n                        >\n                          <Statistic\n                            title={item.title}\n                            className=\"short\"\n                            value={item.dataReturn}\n                          />\n                        </Card>\n                      </Col>\n                    ))}\n                  </Row>\n                </div>\n              </div>\n            )}\n            {tableTypes && tableAreas.length > 0 ? (\n              tableAreas.map(ta => (\n                <div>\n                  <h3>{ta.tableAreaName}</h3>\n                  <List\n                    grid={{\n                      gutter: 16,\n                      xs: 1,\n                      sm: 2,\n                      md: 4,\n                      lg: 4,\n                      xl: 6,\n                      xxl: 3\n                    }}\n                    dataSource={ta.tableMaps}\n                    renderItem={(item, index) => (\n                      <List.Item>\n                        {item.checkNo !== \"0\" ? (\n                          !displayed.includes(item.tableCode) &&\n                          (displayed.push(item.tableCode),\n                          (\n                            <div>\n                              <img\n                                style={{ width: \"100%\" }}\n                                src={\n                                  \"data:image/png;base64, \" +\n                                  this.getImagePickup(item)\n                                }\n                                alt=\"img\"\n                              />\n\n                              <div className=\"centered\">\n                                <p className=\"table-info\">\n                                  <span>{item.tableCode}</span>|\n                                  <span>\n                                    {item.tGuest}/{item.tChild}\n                                  </span>\n                                  |<span>({item.tSubtable})</span>\n                                </p>\n                                <p>{item.amount}</p>\n                                <p>{item.openTime}</p>\n                                <p\n                                  className={`status ${\n                                    item.lastChgTime <= 45\n                                      ? \"success\"\n                                      : item.lastChgTime <= 80\n                                      ? \"warning\"\n                                      : \"danger\"\n                                  }`}\n                                />\n                              </div>\n                            </div>\n                          ))\n                        ) : (\n                          <div>\n                            <img\n                              style={{ width: \"100%\" }}\n                              src={\n                                \"data:image/png;base64, \" +\n                                this.getImageNull(item)\n                                // tableTypes.find(\n                                //   i => i.tableType1 === item.tableType\n                                // ).imageNull\n                              }\n                              alt=\"img\"\n                            />\n\n                            <div className=\"centered\">\n                              <p className=\"table-info\">\n                                <span>{item.tableCode}</span>\n                              </p>\n                            </div>\n                          </div>\n                        )}\n                      </List.Item>\n                    )}\n                  />\n                </div>\n              ))\n            ) : (\n              <h3>Empty</h3>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => state.tableMap,\n  dispatch => bindActionCreators(actionCreators, dispatch)\n)(TableMap);\n","import React, { Component } from \"react\";\r\nimport FroalaEditorFunctionality from \"react-froala-wysiwyg\";\r\n\r\nclass About extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      model: \"Example text\"\r\n    };\r\n  }\r\n\r\n  handleModelChange = model => {\r\n    console.log(model);\r\n    this.setState({\r\n      model: model\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const config = {\r\n      imagePaste: true,\r\n      imageUpload: true,\r\n      imageUploadParam: \"image_param\",\r\n\r\n      // Set the image upload URL.\r\n      imageUploadURL: \"/upload_image\",\r\n\r\n      // Additional upload params.\r\n      imageUploadParams: { id: new Date().toString() },\r\n\r\n      // Set request type.\r\n      imageUploadMethod: \"POST\",\r\n\r\n      // Set max image size to 5MB.\r\n      imageMaxSize: 5 * 1024 * 1024,\r\n\r\n      // Allow to upload PNG and JPG.\r\n      imageAllowedTypes: [\"jpeg\", \"jpg\", \"png\"],\r\n      placeholderText: \"Edit Your Content Here!\",\r\n      pluginsEnabled: [\r\n        \"image\",\r\n        \"link\",\r\n        \"print\",\r\n        \"align\",\r\n        \"embedly\",\r\n        \"table\",\r\n        \"ul\",\r\n        \"ol\",\r\n        \"hr\",\r\n        \"video\",\r\n        \"word_paste\",\r\n        \"fullscreen\",\r\n        \"colors\",\r\n        \"fontFamily\"\r\n      ],\r\n      toolbarButtons: [\r\n        [\r\n          \"bold\",\r\n          \"italic\",\r\n          \"underline\",\r\n          \"strikeThrough\",\r\n          \"subscript\",\r\n          \"superscript\",\r\n          \"fontFamily\",\r\n          \"fontSize\",\r\n          \"textColor\",\r\n          \"backgroundColor\",\r\n          \"inlineClass\",\r\n          \"inlineStyle\",\r\n          \"clearFormatting\"\r\n        ],\r\n        [\r\n          \"undo\",\r\n          \"redo\",\r\n          \"print\",\r\n          \"insertTable\",\r\n          \"insertImage\",\r\n          \"fontFamily\",\r\n          \"fullscreen\"\r\n        ]\r\n      ],\r\n      events: {\r\n        \"image.beforeUpload\": function(images) {\r\n          // Return false if you want to stop the image upload.\r\n        },\r\n        \"image.uploaded\": function(response) {\r\n          // Image was uploaded to the server.\r\n        },\r\n        \"image.inserted\": function($img, response) {\r\n          // Image was inserted in the editor.\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <FroalaEditorFunctionality\r\n          config={config}\r\n          model={this.state.model}\r\n          onModelChange={this.handleModelChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import * as dataServices from \"../services/DataServices\";\nconst requestDefRVCListType = \"REQUEST_DEFRPVLIST\";\nconst receiveDefRVCListType = \"RECEIVE_DEFRPVLIST\";\n\nconst requestNotisType = \"REQUEST_NOTIS\";\nconst receiveNotisType = \"RECEIVE_NOTIS\";\n\nconst initialState = { isLoading: false, defRVCList: \"\", notis: [] };\n\nexport const actionCreators = {\n  requestDefRVCList: () => async dispatch => {\n    try {\n      dispatch({ type: requestDefRVCListType });\n      const res = await dataServices.get(\"api/Login/GetDefRVCLists\");\n      // console.log(res);\n      if (res.status === 200) {\n        dispatch({ type: receiveDefRVCListType, defRVCList: res.data });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  getTotalNotis: () => async () => {\n    try {\n      const res = await dataServices.get(\"api/Login/GetTotalAlertByDate\");\n\n      if (res.status === 200) {\n        return res.data[0];\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  getNoti: id => async () => {\n    try {\n      const res = await dataServices.get(\n        \"api/Login/GetAlertOneByDate?IDAlert=\" + id\n      );\n      if (res.status === 200) {\n        return res.data[0];\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  requestNotis: () => async dispatch => {\n    try {\n      dispatch({ type: receiveNotisType });\n      const res = await dataServices.get(\"api/Login/GetAlertMoreOneByDate\");\n      console.log(res);\n      if (res.status === 200) {\n        dispatch({ type: receiveNotisType, notis: res.data });\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  },\n  login: data => async () => {\n    // console.log(data);\n    const res = await dataServices.get(\n      `api/Login/GetUserName?RVCNo=${data.rvcNo}&Password=${data.password}`\n    );\n    if (res.status === 200) {\n      return res.data[0];\n    }\n  }\n};\n\nexport const reducer = (state, action) => {\n  state = state || initialState;\n\n  if (action.type === requestDefRVCListType) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n\n  if (action.type === receiveDefRVCListType) {\n    return {\n      ...state,\n      defRVCList: action.defRVCList,\n      isLoading: false\n    };\n  }\n\n  if (action.type === requestNotisType) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n\n  if (action.type === receiveNotisType) {\n    return {\n      ...state,\n      notis: action.notis,\n      isLoading: false\n    };\n  }\n\n  return state;\n};\n","import React, { Component } from \"react\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionCreators } from \"../store/Login\";\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  message,\r\n  Radio,\r\n  notification,\r\n  Menu,\r\n  Dropdown\r\n} from \"antd\";\r\nimport logo from \"../assets/images/logo.png\";\r\n\r\nconst { Option } = Select;\r\n\r\n// const\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  menu = () => {\r\n    const { notis } = this.props;\r\n    return (\r\n      <Menu>\r\n        {notis &&\r\n          notis.map(item => <Menu.Item key={item.id}>{item.title}</Menu.Item>)}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  openNotification = (message, description) => {\r\n    const args = {\r\n      message,\r\n      description,\r\n      duration: 0,\r\n      placement: \"topLeft\"\r\n    };\r\n    notification.open(args);\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.props.login(values).then(res => {\r\n          if (res.resuilt === 1) {\r\n            message.success(\"Login Success!\");\r\n            sessionStorage.setItem(\"posUser\", res.posUser);\r\n            window.location.replace(\"/POS-API\");\r\n          } else {\r\n            message.error(\"RVC No or Password is not correct!\");\r\n          }\r\n        });\r\n        // console.log(\"Received values of form: \", values);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.requestDefRVCList();\r\n    this.checkNotis();\r\n  }\r\n\r\n  checkNotis = async () => {\r\n    const totalNotis = await this.props.getTotalNotis();\r\n    if (totalNotis.totalMessage === 1) {\r\n      const noti = await this.props.getNoti(totalNotis.idAlert);\r\n      console.log(noti);\r\n      const message = noti.title;\r\n      const description = noti.information;\r\n      this.openNotification(message, description);\r\n    }\r\n    this.props.requestNotis();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { defRVCList, isLoading } = this.props;\r\n    // console.log(defRVCList);\r\n    return (\r\n      <div className=\"login-page\">\r\n        {isLoading ? (\r\n          <h3>Loading</h3>\r\n        ) : (\r\n          <Row type=\"flex\" justify=\"center\">\r\n            <Dropdown trigger={[\"click\"]} overlay={() => this.menu()}>\r\n              <Button\r\n                className=\"noti-btn\"\r\n                size=\"large\"\r\n                shape=\"circle-outline\"\r\n                type=\"danger\"\r\n                icon=\"bell\"\r\n              />\r\n            </Dropdown>\r\n\r\n            <Col lg={10} md={12} sm={16} xs={22} className=\"login-card\">\r\n              <div className=\"login-form\">\r\n                <div>\r\n                  <img style={{ height: \"100px\" }} alt=\"logo\" src={logo} />\r\n                </div>\r\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"rvcNo\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Please choose RVC!\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Radio.Group size=\"large\">\r\n                        {defRVCList &&\r\n                          defRVCList.map(item => (\r\n                            <Radio.Button value={item.rvcno}>\r\n                              {item.rvcname}\r\n                            </Radio.Button>\r\n                          ))}\r\n                      </Radio.Group>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"password\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Please input your Password!\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Input\r\n                        prefix={\r\n                          <Icon\r\n                            type=\"lock\"\r\n                            style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                          />\r\n                        }\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                      className=\"login-form-button\"\r\n                    >\r\n                      Log in\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginForm = Form.create()(Login);\r\n\r\nexport default connect(\r\n  state => state.login,\r\n  dispatch => bindActionCreators(actionCreators, dispatch)\r\n)(LoginForm);\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout\";\nimport BlankLayout from \"./components/BlankLayout\";\n\nimport Home from \"./components/home\";\nimport TableMap from \"./components/TableMap\";\nimport About from \"./components/about\";\nimport Login from \"./components/Login\";\n\nvar currentUrl = window.location.pathname.split(\"/\")[2];\n// console.log(currentUrl);\n\n// function checkAuth() {\n//   const posUser = localStorage.getItem(\"posUser\");\n//   if (!posUser || posUser.length < 1) {\n//     window.location.replace(\"/login\");\n//   }\n// }\n\nfunction App() {\n  return currentUrl === \"login\" ? (\n    <BlankLayout>\n      <Switch>\n        <Route exact path=\"/POS-API/login\" component={Login} />\n      </Switch>\n    </BlankLayout>\n  ) : (\n    <Layout>\n      <Switch>\n        <Route exact path=\"/POS-API\" component={TableMap} />\n        <Route path=\"/POS-API/tablemap\" component={TableMap} />\n        <Route path=\"/POS-API/about\" component={About} />\n      </Switch>\n    </Layout>\n  );\n\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React\n  //     </a>\n  //   </header>\n  // </div>\n}\n\nexport default App;\n","import \"antd/dist/antd.css\";\nimport \"./assets/css/login.css\";\nimport \"./assets/css/index.css\";\n\nimport \"froala-editor/js/froala_editor.pkgd.min.js\";\nimport \"froala-editor/css/froala_style.min.css\";\nimport \"froala-editor/css/froala_editor.pkgd.min.css\";\nimport \"froala-editor/js/plugins.pkgd.min.js\";\nimport \"font-awesome/css/font-awesome.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\r\n\r\nimport * as Login from \"./Login\";\r\nimport * as TableMap from \"./TableMap\";\r\n\r\nexport default function configureStore(history, initialState) {\r\n  const reducers = {\r\n    login: Login.reducer,\r\n    tableMap: TableMap.reducer\r\n  };\r\n\r\n  const middleware = [thunk, routerMiddleware(history)];\r\n\r\n  // In development, use the browser's Redux dev tools extension if installed\r\n  const enhancers = [];\r\n  const isDevelopment = process.env.NODE_ENV === \"development\";\r\n  if (\r\n    isDevelopment &&\r\n    typeof window !== \"undefined\" &&\r\n    window.devToolsExtension\r\n  ) {\r\n    enhancers.push(window.devToolsExtension());\r\n  }\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    routing: routerReducer\r\n  });\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ...enhancers\r\n    )\r\n  );\r\n}\r\n"],"sourceRoot":""}